import org.flywaydb.gradle.task.FlywayCleanTask
import org.flywaydb.gradle.task.FlywayInfoTask
import org.flywaydb.gradle.task.FlywayMigrateTask

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.flywaydb.flyway' version '5.2.4'
}

repositories {
    mavenCentral()
}

springBoot {
    buildInfo()
}

ext {
    springBootVersion = '2.1.4.RELEASE'
    jacksonDatatypeJsr310Version = '2.9.8'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"

    implementation 'mysql:mysql-connector-java:8.0.11'

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatatypeJsr310Version"

    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

def devDbUrl = "jdbc:mysql://localhost:3306/ADDRESS_BOOK_DEV?user=root&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
bootRun.environment([
        "WELCOME_MESSAGE": "Hello from gradle",
        "SPRING_DATASOURCE_URL": devDbUrl,
        "MANAGEMENT_SECURITY_ENABLED": false
])

def testDbUrl = "jdbc:mysql://localhost:3306/ADDRESS_BOOK_TEST?user=root&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
test.environment([
        "SPRING_DATASOURCE_URL": testDbUrl,
        "WELCOME_MESSAGE": "Hello from test",
        "MANAGEMENT_SECURITY_ENABLED": false
])

flyway {
    url = devDbUrl
    user = "root"
    password = ""
    locations = ["filesystem:databases/address_book/migrations"]
}

task testClean(type: FlywayCleanTask) {
    url = testDbUrl
}

task testInfo(type: FlywayInfoTask) {
    url = testDbUrl
}

task testMigrate(type: FlywayMigrateTask) {
    url = testDbUrl
}

task devClean(type: FlywayCleanTask) {
    url = devDbUrl
}

task devInfo(type: FlywayInfoTask) {
    url = devDbUrl
}

task devMigrate(type: FlywayMigrateTask) {
    url = devDbUrl
}